package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"graphql/graph/model"
)

// SignUp is the resolver for the SignUp field.
func (r *mutationResolver) SignUp(ctx context.Context, input model.NewUser) (*model.User, error) {
	return r.S.SignUp(input)
}

// CreateCompany is the resolver for the CreateCompany field.
func (r *mutationResolver) CreateCompany(ctx context.Context, input model.NewCompany) (*model.Company, error) {
	return r.S.CreateCompany(input)
}

// CreateJob is the resolver for the CreateJob field.
func (r *mutationResolver) CreateJob(ctx context.Context, input model.NewJob) (*model.Job, error) {
	return r.S.CreateJob(input)
}

// ViewAllCompanies is the resolver for the ViewAllCompanies field.
func (r *queryResolver) ViewAllCompanies(ctx context.Context) ([]*model.Company, error) {
	return r.S.ViewAllCompanies()
}

// ViewCompanyByID is the resolver for the ViewCompanyById field.
func (r *queryResolver) ViewCompanyByID(ctx context.Context, companyid string) (*model.Company, error) {
	return r.S.ViewCompanyByID(companyid)
}

// GetJobsForCompany is the resolver for the GetJobsForCompany field.
func (r *queryResolver) GetJobsForCompany(ctx context.Context, companyid string) ([]*model.Job, error) {
	return r.S.GetJobsForCompany(companyid)
}

// GetAllJobs is the resolver for the GetAllJobs field.
func (r *queryResolver) GetAllJobs(ctx context.Context) ([]*model.Job, error) {
	return r.S.GetAllJobs()
}

// GetJobByID is the resolver for the GetJobById field.
func (r *queryResolver) GetJobByID(ctx context.Context, jobid string) (*model.Job, error) {
	return r.S.GetJobByID(jobid)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
